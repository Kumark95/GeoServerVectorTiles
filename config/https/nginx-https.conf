server {
    listen 80 default_server;
    server_name *.vm.local;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name app.vm.local;

    # TLS configuration
    ssl_certificate /app/data/certificate-cert.pem;
    ssl_certificate_key /app/data/certificate-key.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /app/data/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Openlayers
    location / {
        # Proxy settings
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_header Set-Cookie;

        add_header X-TEST 'Testito';

        # By default uses HTTP 1.0 with the upstream
        proxy_http_version 1.1;

        proxy_pass http://openlayers:80;
    }
}

server {
    listen 443 ssl http2;
    server_name geoserver.vm.local;

    # TLS configuration
    ssl_certificate /app/data/certificate-cert.pem;
    ssl_certificate_key /app/data/certificate-key.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /app/data/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;


    # CORS
    add_header Access-Control-Allow-Origin '*';

    # GeoServer
    location ~ ^/(?!geoserver) {
        # `last` stop processing and move to the new location block
        rewrite ^ /geoserver$uri last;
    }

    location ~ /geoserver/ {
        # Proxy settings
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_header Set-Cookie;

        # By default uses HTTP 1.0 with the upstream
        proxy_http_version 1.1;

        proxy_pass http://geoserver:8080;
    }
}
